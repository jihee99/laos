<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.laos.dao.CommonDao">

	<!-- 소유역 기본 정보 조회 -->
	<select id="selectBasinData" parameterType="String" resultType="com.example.laos.vo.TankBasicInputData">
		SELECT
			LPAD(A.BASIN_CD, 8, ' ') AS BASIN_CD,
			A.BASIN_NM AS BASIN_NM,
			TO_CHAR(B.OBS_START, 'MM/DD/YYYY') AS OBS_START,
			TO_CHAR(B.OBS_END, 'MM/DD/YYYY') AS OBS_END,
			LPAD(B.VOA::TEXT,10,' ') AS VOA,
			LPAD(B.VOM::TEXT,10,' ') AS VOM,
			LPAD(A.BASIN_AREA::TEXT, 10, ' ') AS BASIN_AREA,
			LPAD(B.XSI::text, 10, ' ') AS XSI,
			LPAD(B.XAI::text, 10, ' ') AS XAI,
			LPAD(B.XBI::text, 10, ' ') AS XBI,
			LPAD(B.XCI::text, 10, ' ') AS XCI,
			LPAD(B.XDI::text, 10, ' ') AS XDI,
			LPAD(B.S1::text, 10, ' ') AS S1,
			LPAD(B.S2::text, 10, ' ') AS S2,
			LPAD(B.K1::text, 10, ' ') AS K1,
			LPAD(B.K2::text, 10, ' ') AS K2,
			LPAD(B.A2::text, 10, ' ') AS A2,
			LPAD(B.A1::text, 10, ' ') AS A1,
			LPAD(B.A0::text, 10, ' ') AS A0,
			LPAD(B.B1::text, 10, ' ') AS B1,
			LPAD(B.B0::text, 10, ' ') AS B0,
			LPAD(B.C1::text, 10, ' ') AS C1,
			LPAD(B.C0::text, 10, ' ') AS C0,
			LPAD(B.D1::text, 10, ' ') AS D1,
			LPAD(B.HA2::text, 10, ' ') AS HA2,
			LPAD(B.HA1::text, 10, ' ') AS HA1,
			LPAD(B.HB::text, 10, ' ') AS HB,
			LPAD(B.HC::text, 10, ' ') AS HC,
			LPAD(B.U1::text, 10, ' ') AS U1,
			LPAD(B.U2::text, 10, ' ') AS U2
		FROM
			BASIN_INFO A,
			INPUT_TANK B
		--JOIN
		--    INPUT_TANK_DATA ITD ON IT.BASIN_CD = ITD.BASIN_CD
		WHERE
			A.BASIN_CD = #{code} AND
			A.BASIN_CD = B.BASIN_CD
	</select>


	<!-- 일자별 관측 정보 조회 -->
	<select id="selectTankInputData" parameterType="String" resultType="com.example.laos.vo.TankInputData">
		SELECT
			LPAD(OBS_DATE::text, 10, ' ') AS OBS_DATE,
			LPAD(RAINFALL::text, 10, ' ') AS RAINFALL,
			LPAD(VALUE1::text, 10, ' ') AS VALUE1,
			LPAD(EVAPORATION::text, 10, ' ') AS EVAPORATION
		FROM
			INPUT_TANK_DATA
		WHERE
			BASIN_CD = #{code}
		ORDER BY OBS_DATE
	</select>

	<select id="selectTankInputDataCscal" parameterType="String" resultType="TankInputData">
		select
			LPAD(OBS_DATE::text, 10, ' ') AS OBS_DATE,
			LPAD(RAINFALL::text, 10, ' ') AS RAINFALL,
			LPAD(concat(VALUE1,' ')::text, 10, ' ') AS VALUE1,
			LPAD(EVAPORATION::text, 10, ' ') AS EVAPORATION
		FROM
			INPUT_TANK_DATA
		WHERE
			BASIN_CD = #{code}
		ORDER BY OBS_DATE
	</select>

	<!-- Define the INSERT statement using <for> loop -->
	<insert id="insertTankSimulationResults" parameterType="list">
		INSERT INTO tank_simulation_results (
			result_id,
			obs_date,
			r,
			qo_cms,
			qs_cms,
			qo_mm,
			qs_mm,
			xs,
			xa,
			xb,
			xc,
			xd,
			q1,
			q2,
			q3,
			q4,
			et
		) VALUES
		<foreach item="item" collection="list" separator=",">
		(
			#{item.resultId}::uuid,
			#{item.obsDate},
			#{item.r},
			#{item.qoCms},
			#{item.qsCms},
			#{item.qoMm},
			#{item.qsMm},
			#{item.xs},
			#{item.xa},
			#{item.xb},
			#{item.xc},
			#{item.xd},
			#{item.q1},
			#{item.q2},
			#{item.q3},
			#{item.q4},
			#{item.et}
		)
		</foreach>
	</insert>

	<insert id="insertTnTankBasinResults" parameterType="TankResultData">
		INSERT INTO TANK_SIMULATION_BASIN_RESULTS (
			result_id,
			sum_rainfall,
			sum_obs_flow_dpth,
			sum_comp_flow_dpth,
			sum_evaporation,
			runoff_ratio,
			obs_mean,
			obs_sdev,
			sim_mean,
			sim_sdev
		) VALUES
		(
			#{resultId}::uuid,
			#{sumRainfall},
			#{sumObsFlowDpth},
			#{sumCompFlowDpth},
			#{sumEvaport},
			#{runoffRatio},
			#{obsMean},
			#{obsSdev},
			#{simMean},
			#{simSdev}
		)
	</insert>

	<select id="selectFardInputDataList" resultType="hashmap">
		SELECT
			SUBSTRING(OBS_DT, 1, 4) AS YR,
			MAX(S1) AS D01,
			MAX(S2) AS D02,
			MAX(S3) AS D03,
			MAX(S4) AS D06,
			MAX(S5) AS D12,
			MAX(S6) AS D18
		FROM
			(
				SELECT
					OBS_DT,
					SUM(D0) AS S1,
					SUM(D0+D1) AS S2,
					SUM(D0+D1+D2) AS S3,
					SUM(D0+D1+D2+D3+D4+D5) AS S4,
					SUM(D0+D1+D2+D3+D4+D5+D6+D7+D8+D9+D10+D11) AS S5,
					SUM(D0+D1+D2+D3+D4+D5+D6+D7+D8+D9+D10+D11+D12+D13+D14+D15+D16+D17) AS S6
				FROM
					(
						SELECT
							OBS_DT,
							RAINFALL AS D0,
							LEAD(RAINFALL, 1, 0) OVER(ORDER BY OBS_DT) D1,
								LEAD(RAINFALL, 2, 0) OVER(ORDER BY OBS_DT) D2,
								LEAD(RAINFALL, 3, 0) OVER(ORDER BY OBS_DT) D3,
								LEAD(RAINFALL, 4, 0) OVER(ORDER BY OBS_DT) D4,
								LEAD(RAINFALL, 5, 0) OVER(ORDER BY OBS_DT) D5,
								LEAD(RAINFALL, 6, 0) OVER(ORDER BY OBS_DT) D6,
								LEAD(RAINFALL, 7, 0) OVER(ORDER BY OBS_DT) D7,
								LEAD(RAINFALL, 8, 0) OVER(ORDER BY OBS_DT) D8,
								LEAD(RAINFALL, 9, 0) OVER(ORDER BY OBS_DT) D9,
								LEAD(RAINFALL, 10, 0) OVER(ORDER BY OBS_DT) D10,
								LEAD(RAINFALL, 11, 0) OVER(ORDER BY OBS_DT) D11,
								LEAD(RAINFALL, 12, 0) OVER(ORDER BY OBS_DT) D12,
								LEAD(RAINFALL, 13, 0) OVER(ORDER BY OBS_DT) D13,
								LEAD(RAINFALL, 14, 0) OVER(ORDER BY OBS_DT) D14,
								LEAD(RAINFALL, 15, 0) OVER(ORDER BY OBS_DT) D15,
								LEAD(RAINFALL, 16, 0) OVER(ORDER BY OBS_DT) D16,
								LEAD(RAINFALL, 17, 0) OVER(ORDER BY OBS_DT) D17
						FROM
							TEMP.OBS_AWS_DD
					) A
				GROUP BY
					OBS_DT
			) B
		GROUP BY
			YR
		ORDER BY
			YR
	</select>


<!--	<select id="selectFardInputDataListMap" resultType="hashmap">-->
<!--		SELECT-->
<!--			SUBSTRING(OBS_DT, 1, 4) AS YR,-->
<!--			MAX(S1) AS D01,-->
<!--			MAX(S2) AS D02,-->
<!--			MAX(S3) AS D03,-->
<!--			MAX(S4) AS D06,-->
<!--			MAX(S5) AS D12,-->
<!--			MAX(S6) AS D18-->
<!--		FROM-->
<!--			(-->
<!--				SELECT-->
<!--					OBS_DT,-->
<!--					SUM(D0) AS S1,-->
<!--					SUM(D0+D1) AS S2,-->
<!--					SUM(D0+D1+D2) AS S3,-->
<!--					SUM(D0+D1+D2+D3+D4+D5) AS S4,-->
<!--					SUM(D0+D1+D2+D3+D4+D5+D6+D7+D8+D9+D10+D11) AS S5,-->
<!--					SUM(D0+D1+D2+D3+D4+D5+D6+D7+D8+D9+D10+D11+D12+D13+D14+D15+D16+D17) AS S6-->
<!--				FROM-->
<!--					(-->
<!--						SELECT-->
<!--							OBS_DT,-->
<!--							RAINFALL AS D0,-->
<!--							LEAD(RAINFALL, 1, 0) OVER(ORDER BY OBS_DT) D1,-->
<!--								LEAD(RAINFALL, 2, 0) OVER(ORDER BY OBS_DT) D2,-->
<!--								LEAD(RAINFALL, 3, 0) OVER(ORDER BY OBS_DT) D3,-->
<!--								LEAD(RAINFALL, 4, 0) OVER(ORDER BY OBS_DT) D4,-->
<!--								LEAD(RAINFALL, 5, 0) OVER(ORDER BY OBS_DT) D5,-->
<!--								LEAD(RAINFALL, 6, 0) OVER(ORDER BY OBS_DT) D6,-->
<!--								LEAD(RAINFALL, 7, 0) OVER(ORDER BY OBS_DT) D7,-->
<!--								LEAD(RAINFALL, 8, 0) OVER(ORDER BY OBS_DT) D8,-->
<!--								LEAD(RAINFALL, 9, 0) OVER(ORDER BY OBS_DT) D9,-->
<!--								LEAD(RAINFALL, 10, 0) OVER(ORDER BY OBS_DT) D10,-->
<!--								LEAD(RAINFALL, 11, 0) OVER(ORDER BY OBS_DT) D11,-->
<!--								LEAD(RAINFALL, 12, 0) OVER(ORDER BY OBS_DT) D12,-->
<!--								LEAD(RAINFALL, 13, 0) OVER(ORDER BY OBS_DT) D13,-->
<!--								LEAD(RAINFALL, 14, 0) OVER(ORDER BY OBS_DT) D14,-->
<!--								LEAD(RAINFALL, 15, 0) OVER(ORDER BY OBS_DT) D15,-->
<!--								LEAD(RAINFALL, 16, 0) OVER(ORDER BY OBS_DT) D16,-->
<!--								LEAD(RAINFALL, 17, 0) OVER(ORDER BY OBS_DT) D17-->
<!--						FROM-->
<!--							TEMP.OBS_AWS_DD-->
<!--					) A-->
<!--				GROUP BY-->
<!--					OBS_DT-->
<!--			) B-->
<!--		GROUP BY-->
<!--			YR-->
<!--		ORDER BY-->
<!--			YR-->
<!--	</select>-->
</mapper>
